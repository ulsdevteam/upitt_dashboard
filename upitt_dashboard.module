<?php

/**
 * Implements hook_menu().
 */
function upitt_dashboard_menu() {
  $items = array(
    'admin/islandora/tools/upitt_dashboard' => array(
      'title' => 'University of Pittsburgh Admin Dashboard',
      'description' => 'Configure options related to the Admin Dashboard.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_dashboard_admin_form'),
      'access arguments' => array(UPITT_ISLANDORA_MEMBEROFSITE_MANAGE),
      'file' => 'includes/admin.form.inc',
    ),
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function upitt_dashboard_block_info() {
  $block_bids = variable_get('upitt_dashboard_block_bids', '');
  $block_bids_arr = explode(",", $block_dsids);
  foreach ($block_bids_arr as $block_bid) {
    $bid = trim($block_bid);
    $blocks[$bid] = array(
      'info' => t('Islandora Datastream Block {'.$bid.'}'),
      'cache' => DRUPAL_CACHE_PER_PAGE,
    );
  }

  $blocks = array(
    'dashboard-report1-test' => array(
      'info' => t('Dashboard TEST Block'),
      'cache' => DRUPAL_CACHE_PER_PAGE,
    ),
    'dashboard-report2-test' => array(
      'info' => t('Dashboard TEST Block'),
      'cache' => DRUPAL_CACHE_PER_PAGE,
    ),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function upitt_dashboard_block_view($delta = '') {
  if ($delta == "*uninitialized*") { exit; }

  if (strstr($delta, 'idb-') <> '') {
      $block = array();
      $dsid = str_replace('idb-', '', $delta);
      include_once('sites/all/modules/islandora/includes/tuque.inc');

      $item = menu_get_item();
      if (isset($_SESSION['pid']) || (isset($item['page_arguments'][0]) && is_object($item['page_arguments'][0]) && (get_class($item['page_arguments'][0]) == 'IslandoraFedoraObject'))) {
          $fedora_object = (isset($_SESSION['pid'])) ? islandora_object_load($_SESSION['pid']) : $item['page_arguments'][0];
          unset($_SESSION['pid']);
          $connection = islandora_get_tuque_connection();
          if ($connection) {
              try {
                  $info = $connection->api->a->describeRepository();
                  // If we are able to successfully call API-M::getDatastream, assume we are
                  // an authenticated user, as API-M is usally locked down.
                  $datastream = $fedora_object[$dsid];
                  $content = '';
                  if (($datastream) && (is_object($datastream))) {
                    // handle the various types of content there, the default will be rendered as straight text
                    switch ($datastream->mimetype) {
                      case 'image/jpeg':
                      case 'image/jpg':
                      case 'image/gif':
                      case 'image/png':
                        if (isset($fedora_object[$dsid])) {
                          $collection_tn_url = url("islandora/object/{$fedora_object->id}/datastream/{$dsid}/view");
                          $params = array(
                            'title' => $fedora_object->label,
                            'alt' => $fedora_object->label,
                            'path' => $collection_tn_url);
                          $content = theme('image', $params);
                        }
                        break;
                      default:
                        $tempFilename = tempnam("/tmp", "DS_html_");
                        $datastream->getContent($tempFilename);
                        $lines = file($tempFilename);
                        $content = '';
                        foreach ($lines as $line) {
                          $line = mb_ereg_replace('(\x92)', "'", $line);
                          $content .= mb_convert_encoding($line, 'HTML-ENTITIES', "UTF-8");
                        }
                        @unlink($tempFilename);
                        break;
                    }
                  }

                  // blank title so that it doesn't cause a big h3
                  $block['subject'] = '';
                  $block['content'] =  theme('datastream_block',array('datastream_contents' => $content));
                  return $block;
              } catch (Exception $e) {
                  exit;
              }
          }
      }
  }
}